name: CentOS 8

on:
  pull_request:
  push:
    branches:
      - master
      - 'release/**'

env:
  YUM: dnf

jobs:
  tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    container:
      image: centos:8
    strategy:
      matrix:
        env:
          - SCRIPT: all_2.1
          - SCRIPT: all_2.2
          - SCRIPT: build_dir
          - SCRIPT: components_individually
          - SCRIPT: configure_options
          - SCRIPT: gpgme
          - SCRIPT: install_prefix
          - SCRIPT: no_ldconfig
          - SCRIPT: no_sudo
          - SCRIPT: verify

    env: ${{ matrix.env }}
    timeout-minutes: 70
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up build environment
        run: |
          ${{ env.YUM }} -y -q update
          ${{ env.YUM }} -y -q install --skip-broken \
            git \
            clang gcc gcc-c++ make autoconf automake libtool byacc bison \
            bzip2 gzip ncurses-devel bzip2-devel zlib-devel gettext-devel \
            patch \
            texinfo \
            file \
            which # for gpgme runs
      - name: Set up build environment for those expecting sudo
        if: ${{ matrix.env.SCRIPT != 'no_sudo' }}
        run: |
          ${{ env.YUM }} -y -q install sudo
      - name: Set up build environment for those expecting no sudo
        if: ${{ matrix.env.SCRIPT == 'no_sudo' }}
        run: |
          rpm -e sudo || :
      - name: Import GnuPG keys for "verify.sh" example
        if: ${{ matrix.env.SCRIPT == 'verify' }}
        run: |
          bash ci/import_gpg_keys.sh
      - name: Build GPG
        run: |
          bash -x "./examples/${SCRIPT}.sh"
